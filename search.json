[{"path":"https://coeneisma.github.io/rioRapi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 rioRapi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://coeneisma.github.io/rioRapi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Coen Eisma. Author, maintainer.","code":""},{"path":"https://coeneisma.github.io/rioRapi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eisma C (2025). rioRapi: R Package Dutch Register Institutions Programs (RIO) API. R package version 0.0.0.9000, https://coeneisma.github.io/rioRapi/.","code":"@Manual{,   title = {rioRapi: R Package for the Dutch Register of Institutions and Programs (RIO) API},   author = {Coen Eisma},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://coeneisma.github.io/rioRapi/}, }"},{"path":"https://coeneisma.github.io/rioRapi/index.html","id":"riorapi","dir":"","previous_headings":"","what":"R Package for the Dutch Register of Institutions and Programs (RIO) API","title":"R Package for the Dutch Register of Institutions and Programs (RIO) API","text":"API Register Institutions Programs Registration Netherlands (RIO)","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/get_dataset_id_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get resource ID from name — get_dataset_id_from_name","title":"Helper function to get resource ID from name — get_dataset_id_from_name","text":"Helper function get resource ID name","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/get_dataset_id_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get resource ID from name — get_dataset_id_from_name","text":"","code":"get_dataset_id_from_name(   conn = NULL,   dataset_name,   package_id = \"rio_nfo_po_vo_vavo_mbo_ho\" )"},{"path":"https://coeneisma.github.io/rioRapi/reference/get_dataset_id_from_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get resource ID from name — get_dataset_id_from_name","text":"conn Connection object dataset_name Resource name package_id Package ID","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/get_dataset_id_from_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get resource ID from name — get_dataset_id_from_name","text":"Resource ID NULL found","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute an API call to the RIO CKAN API — rio_api_call","title":"Execute an API call to the RIO CKAN API — rio_api_call","text":"function executes prepared request RIO CKAN API returns parsed JSON response.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute an API call to the RIO CKAN API — rio_api_call","text":"","code":"rio_api_call(   req = NULL,   endpoint,   method = \"GET\",   body = NULL,   simplify = TRUE )"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute an API call to the RIO CKAN API — rio_api_call","text":"req request object, typically created rio_api_connection(). NULL, new connection created. endpoint API endpoint call. method HTTP method use. Default \"GET\". body request body list POST requests. Default NULL. simplify Whether simplify response R vectors/matrices. Default TRUE.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute an API call to the RIO CKAN API — rio_api_call","text":"parsed JSON response API.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute an API call to the RIO CKAN API — rio_api_call","text":"","code":"if (FALSE) { # \\dontrun{ response <- rio_api_call(endpoint = \"group_list\") } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API availability — rio_api_check","title":"Check API availability — rio_api_check","text":"function checks RIO CKAN API available responsive.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API availability — rio_api_check","text":"","code":"rio_api_check()"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API availability — rio_api_check","text":"TRUE API available, FALSE otherwise.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check API availability — rio_api_check","text":"","code":"if (FALSE) { # \\dontrun{ is_available <- rio_api_check() } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a connection to the RIO CKAN API — rio_api_connection","title":"Create a connection to the RIO CKAN API — rio_api_connection","text":"function creates request object connect Dutch Register Institutions Programs (RIO) CKAN API.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a connection to the RIO CKAN API — rio_api_connection","text":"","code":"rio_api_connection(base_url = \"https://onderwijsdata.duo.nl/api/3/action\")"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a connection to the RIO CKAN API — rio_api_connection","text":"base_url base URL RIO CKAN API. Default \"https://onderwijsdata.duo.nl/api/3/action\".","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a connection to the RIO CKAN API — rio_api_connection","text":"request object configured RIO CKAN API.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_api_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a connection to the RIO CKAN API — rio_api_connection","text":"","code":"if (FALSE) { # \\dontrun{ rio_conn <- rio_api_connection() } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine RIO datasets — rio_combine","title":"Combine RIO datasets — rio_combine","text":"function combines multiple RIO datasets based common ID field.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine RIO datasets — rio_combine","text":"","code":"rio_combine(..., by = NULL, suffix = c(\"_x\", \"_y\"))"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine RIO datasets — rio_combine","text":"... Named tibbles combine. argument tibble data RIO. Character vector columns join . NULL, join columns name. suffix Suffixes add make non-column names unique across joined tables.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine RIO datasets — rio_combine","text":"combined tibble data input tibbles.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine RIO datasets — rio_combine","text":"","code":"if (FALSE) { # \\dontrun{ locations <- rio_get_locations(city = \"Rotterdam\") institutions <- rio_get_data(dataset_id = \"institution-resource-id\")  # Combine datasets combined_data <- rio_combine(   locations = locations,   institutions = institutions,   by = \"INSTELLINGSCODE\" ) } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_filter_by_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data based on reference date — rio_filter_by_date","title":"Filter data based on reference date — rio_filter_by_date","text":"function filters data RIO API based reference date, considering start end dates records.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_filter_by_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data based on reference date — rio_filter_by_date","text":"","code":"rio_filter_by_date(   data,   reference_date = Sys.Date(),   start_date_col = \"BEGINDATUM\",   end_date_col = \"EINDDATUM\" )"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_filter_by_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data based on reference date — rio_filter_by_date","text":"data tibble containing RIO data. reference_date reference date filter . Default current date. start_date_col name column containing start dates. Default \"BEGINDATUM\". end_date_col name column containing end dates. Default \"EINDDATUM\".","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_filter_by_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data based on reference date — rio_filter_by_date","text":"tibble containing records valid reference date.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch data from a RIO dataset — rio_get_data","title":"Fetch data from a RIO dataset — rio_get_data","text":"function retrieves data specific dataset RIO CKAN API. can specify either dataset_id dataset_name identify dataset. Additional filter parameters can provided filter data. default, function retrieves available records (just first 1000).","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch data from a RIO dataset — rio_get_data","text":"","code":"rio_get_data(   dataset_id = NULL,   dataset_name = NULL,   limit = NULL,   query = NULL,   all_records = TRUE,   batch_size = 1000,   quiet = FALSE,   ... )"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch data from a RIO dataset — rio_get_data","text":"dataset_id ID dataset resource retrieve. Default NULL. dataset_name name dataset resource retrieve. Default NULL. Either dataset_id dataset_name must provided. limit Maximum number records return. Default NULL (records). Specify number limit results. query search query string full-text search. Default NULL. all_records Logical indicating whether fetch records (may require multiple API calls). Default TRUE. batch_size Number records retrieve per API call. Default 1000, maximum supported API. quiet Logical indicating whether suppress progress messages. Default FALSE. ... Additional named parameters used filters. example, PLAATSNAAM = \"Rotterdam\" filter records PLAATSNAAM field equals \"Rotterdam\".","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch data from a RIO dataset — rio_get_data","text":"tibble containing retrieved data.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch data from a RIO dataset — rio_get_data","text":"","code":"if (FALSE) { # \\dontrun{ # Get all educational locations in Rotterdam locations <- rio_get_data(   dataset_name = \"Onderwijslocaties\",   PLAATSNAAM = \"Rotterdam\" )  # Get only the first 500 records limited_data <- rio_get_data(   dataset_name = \"Onderwijslocaties\",   limit = 500 )  # Get the first 1000 records without attempting to fetch all records first_batch <- rio_get_data(   dataset_name = \"Onderwijslocaties\",   all_records = FALSE )  # Fetch data without showing progress bar silent_fetch <- rio_get_data(   dataset_name = \"Onderwijslocaties\",   quiet = TRUE ) } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about fields in a dataset — rio_get_fields","title":"Get information about fields in a dataset — rio_get_fields","text":"function retrieves information available fields (columns) dataset, can used filtering rio_get_data function.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about fields in a dataset — rio_get_fields","text":"","code":"rio_get_fields(dataset_id = NULL, dataset_name = NULL)"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about fields in a dataset — rio_get_fields","text":"dataset_id ID dataset resource. Default NULL. dataset_name name dataset resource. Default NULL. Either dataset_id dataset_name must provided.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about fields in a dataset — rio_get_fields","text":"tibble information fields dataset.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about fields in a dataset — rio_get_fields","text":"","code":"if (FALSE) { # \\dontrun{ # Get fields for the \"Onderwijslocaties\" dataset fields <- rio_get_fields(dataset_name = \"Onderwijslocaties\")  # Print the field names that can be used for filtering print(fields$id) } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get educational locations — rio_get_locations","title":"Get educational locations — rio_get_locations","text":"function retrieves educational locations RIO API. convenient wrapper around rio_get_data \"Onderwijslocaties\" dataset. default, returns simple tibble, can also convert data sf object spatial analysis mapping.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get educational locations — rio_get_locations","text":"","code":"rio_get_locations(   city = NULL,   limit = NULL,   as_sf = FALSE,   remove_invalid = FALSE,   quiet = FALSE,   ... )"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get educational locations — rio_get_locations","text":"city Optional city name(s) filter locations. Default NULL. limit Maximum number records return. Default NULL. as_sf Logical indicating whether return result sf object. Default FALSE. remove_invalid Logical indicating whether remove rows invalid missing coordinates. Default FALSE quiet Logical indicating whether suppress progress messages. Default FALSE. ... Additional filter parameters pass rio_get_data.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get educational locations — rio_get_locations","text":"tibble containing educational location data, sf object as_sf = TRUE.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get educational locations — rio_get_locations","text":"","code":"if (FALSE) { # \\dontrun{ # Get educational locations in Rotterdam as a tibble locations <- rio_get_locations(city = \"Rotterdam\")  # Get educational locations in Rotterdam as an sf object locations_sf <- rio_get_locations(city = \"Rotterdam\", as_sf = TRUE)  # Plot locations on a map if (requireNamespace(\"leaflet\", quietly = TRUE)) {   leaflet::leaflet(locations_sf) |>     leaflet::addTiles() |>     leaflet::addCircleMarkers() } } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata for the RIO dataset — rio_get_metadata","title":"Get metadata for the RIO dataset — rio_get_metadata","text":"function retrieves detailed metadata Dutch Register Institutions Programs (RIO) dataset.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata for the RIO dataset — rio_get_metadata","text":"","code":"rio_get_metadata()"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata for the RIO dataset — rio_get_metadata","text":"list containing package metadata.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata for the RIO dataset — rio_get_metadata","text":"","code":"if (FALSE) { # \\dontrun{ rio_metadata <- rio_get_metadata() } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_resource_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get detailed information about a specific dataset — rio_get_resource_info","title":"Get detailed information about a specific dataset — rio_get_resource_info","text":"function retrieves detailed information specific dataset (resource) RIO package.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_resource_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get detailed information about a specific dataset — rio_get_resource_info","text":"","code":"rio_get_resource_info(dataset_id = NULL, dataset_name = NULL)"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_resource_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get detailed information about a specific dataset — rio_get_resource_info","text":"dataset_id ID resource retrieve. Default NULL. dataset_name name dataset resource retrieve. Default NULL. Either dataset_id dataset_name must provided.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_get_resource_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get detailed information about a specific dataset — rio_get_resource_info","text":"list containing detailed information dataset.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join RIO datasets with dataframe lookup — rio_join","title":"Join RIO datasets with dataframe lookup — rio_join","text":"function joins data RIO dataset based IDs dataframe.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join RIO datasets with dataframe lookup — rio_join","text":"","code":"rio_join(df, id_col, dataset_id, rio_id_field = NULL, reference_date = NULL)"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join RIO datasets with dataframe lookup — rio_join","text":"df dataframe containing IDs look . id_col name column dataframe containing IDs. dataset_id ID dataset resource retrieve. rio_id_field name ID field RIO dataset. NULL, uses id_col. reference_date Optional date filter valid records. Default current date.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join RIO datasets with dataframe lookup — rio_join","text":"tibble input dataframe joined data RIO dataset.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join RIO datasets with dataframe lookup — rio_join","text":"","code":"if (FALSE) { # \\dontrun{ # Join a dataframe with institution data df <- data.frame(inst_id = c(\"12345\", \"67890\"), value = c(10, 20)) result <- rio_join(   df = df,   id_col = \"inst_id\",   dataset_id = \"institution-resource-id\",   rio_id_field = \"INSTELLINGSCODE\" ) } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_list_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"List available datasets in the RIO package — rio_list_datasets","title":"List available datasets in the RIO package — rio_list_datasets","text":"function retrieves list available datasets (resources) RIO package.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_list_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available datasets in the RIO package — rio_list_datasets","text":"","code":"rio_list_datasets()"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_list_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available datasets in the RIO package — rio_list_datasets","text":"tibble information dataset, including ID, name, description.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_list_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available datasets in the RIO package — rio_list_datasets","text":"","code":"if (FALSE) { # \\dontrun{ datasets <- rio_list_datasets() } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Join RIO datasets with vector lookup — rio_lookup","title":"Join RIO datasets with vector lookup — rio_lookup","text":"function joins data RIO dataset based vector IDs.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join RIO datasets with vector lookup — rio_lookup","text":"","code":"rio_lookup(ids, dataset_id, id_field, reference_date = NULL)"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join RIO datasets with vector lookup — rio_lookup","text":"ids vector IDs look . dataset_id ID dataset resource retrieve. id_field name ID field dataset. reference_date Optional date filter valid records. Default current date.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join RIO datasets with vector lookup — rio_lookup","text":"tibble data specified IDs.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_map_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map of educational locations — rio_map_locations","title":"Create a map of educational locations — rio_map_locations","text":"function creates leaflet map educational locations RIO data.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_map_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map of educational locations — rio_map_locations","text":"","code":"rio_map_locations(locations, popup_vars = NULL, color = \"blue\", radius = 5)"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_map_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map of educational locations — rio_map_locations","text":"locations tibble containing educational location data RIO API. popup_vars Character vector variable names include popups. Default NULL. color color markers. Default \"blue\". radius radius markers. Default 5.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_map_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a map of educational locations — rio_map_locations","text":"leaflet map object.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_map_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a map of educational locations — rio_map_locations","text":"","code":"if (FALSE) { # \\dontrun{ locations <- rio_get_locations(city = \"Rotterdam\") map <- rio_map_locations(   locations,   popup_vars = c(\"ONDERWIJSLOCATIENAAM\", \"PLAATSNAAM\") ) } # }"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_parse_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert RIO date format to R Date object — rio_parse_date","title":"Convert RIO date format to R Date object — rio_parse_date","text":"function converts dates RIO API format R Date objects.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_parse_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert RIO date format to R Date object — rio_parse_date","text":"","code":"rio_parse_date(date_str)"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_parse_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert RIO date format to R Date object — rio_parse_date","text":"date_str character string containing date \"YYYY-MM-DD\" \"DD-MM-YYYY\" format.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_parse_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert RIO date format to R Date object — rio_parse_date","text":"Date object, NA input valid date.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot timeline of institutions or entities — rio_timeline","title":"Plot timeline of institutions or entities — rio_timeline","text":"function creates timeline plot showing validity periods institutions entities.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot timeline of institutions or entities — rio_timeline","text":"","code":"rio_timeline(   data,   id_col,   name_col = NULL,   start_date_col = \"BEGINDATUM\",   end_date_col = \"EINDDATUM\" )"},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot timeline of institutions or entities — rio_timeline","text":"data tibble containing data start end dates. id_col name column containing entity IDs. name_col name column containing entity names. Default NULL. start_date_col name column containing start dates. Default \"BEGINDATUM\". end_date_col name column containing end dates. Default \"EINDDATUM\".","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot timeline of institutions or entities — rio_timeline","text":"ggplot object showing timeline.","code":""},{"path":"https://coeneisma.github.io/rioRapi/reference/rio_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot timeline of institutions or entities — rio_timeline","text":"","code":"if (FALSE) { # \\dontrun{ institutions <- rio_get_data(dataset_id = \"institution-resource-id\") plot <- rio_timeline(   institutions,   id_col = \"INSTELLINGSCODE\",   name_col = \"INSTELLINGSNAAM\" ) } # }"},{"path":"https://coeneisma.github.io/rioRapi/news/index.html","id":"riorapi-development-version","dir":"Changelog","previous_headings":"","what":"rioRapi (development version)","title":"rioRapi (development version)","text":"Setup package structure","code":""}]

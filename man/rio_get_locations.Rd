% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_data.R
\name{rio_get_locations}
\alias{rio_get_locations}
\title{Get educational locations}
\usage{
rio_get_locations(
  conn = NULL,
  city = NULL,
  limit = NULL,
  as_sf = FALSE,
  remove_invalid = FALSE,
  quiet = FALSE,
  ...
)
}
\arguments{
\item{conn}{A connection object created with \code{rio_api_connection()}.
If NULL, a new connection will be created.}

\item{city}{Optional city name(s) to filter locations. Default is NULL.}

\item{limit}{Maximum number of records to return. Default is NULL.}

\item{as_sf}{Logical indicating whether to return the result as an sf object. Default is FALSE.}

\item{remove_invalid}{Logical indicating whether to remove rows with invalid or missing coordinates. Default is FALSE}

\item{quiet}{Logical indicating whether to suppress progress messages. Default is FALSE.}

\item{...}{Additional filter parameters to pass to rio_fetch_data.}
}
\value{
A tibble containing educational location data, or an sf object if as_sf = TRUE.
}
\description{
This function retrieves educational locations from the RIO API.
It's a convenient wrapper around rio_fetch_data for the "Onderwijslocaties" dataset.
By default, it returns a simple tibble, but it can also convert the data to an sf object
for spatial analysis and mapping.
}
\examples{
\dontrun{
# Get educational locations in Rotterdam as a tibble
locations <- rio_get_locations(city = "Rotterdam")

# Get educational locations in Rotterdam as an sf object
locations_sf <- rio_get_locations(city = "Rotterdam", as_sf = TRUE)

# Plot locations on a map
if (requireNamespace("leaflet", quietly = TRUE)) {
  leaflet::leaflet(locations_sf) |>
    leaflet::addTiles() |>
    leaflet::addCircleMarkers()
}
}

}

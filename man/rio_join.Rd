% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/relations_utils.R
\name{rio_join}
\alias{rio_join}
\title{Join RIO tables based on predefined relations}
\usage{
rio_join(
  ...,
  by_names = TRUE,
  reference_date = Sys.Date(),
  nested = FALSE,
  find_paths = TRUE,
  max_path_length = 10,
  as_sf = FALSE,
  remove_invalid = FALSE,
  quiet = FALSE
)

rio_join(
  ...,
  by_names = TRUE,
  reference_date = Sys.Date(),
  nested = FALSE,
  find_paths = TRUE,
  max_path_length = 10,
  as_sf = FALSE,
  remove_invalid = FALSE,
  quiet = FALSE
)
}
\arguments{
\item{...}{Character vector of table names to load or named tibbles to join.}

\item{by_names}{Logical indicating whether the arguments are table names
rather than actual datasets. Default is TRUE.}

\item{reference_date}{Optional date to filter valid records. Default is the current date (Sys.Date()).
Set to NULL to disable date filtering.}

\item{nested}{Logical indicating whether to return a nested tibble. Default is FALSE.}

\item{find_paths}{Logical indicating whether to find indirect connection paths between datasets
that are not directly connected. Default is TRUE.}

\item{max_path_length}{Maximum length of connection paths to consider when find_paths is TRUE.
Default is NULL (no limit).}

\item{as_sf}{Logical indicating whether to convert the result to an sf object when 'onderwijslocaties'
is included. Default is FALSE.}

\item{remove_invalid}{Logical indicating whether to remove rows with invalid or missing coordinates
when converting to sf. Default is FALSE.}

\item{quiet}{Logical indicating whether to suppress progress messages. Default is FALSE.}
}
\value{
A joined tibble, or an sf object if as_sf = TRUE and 'onderwijslocaties' is included.

A joined tibble, or an sf object if as_sf = TRUE and 'onderwijslocaties' is included.
}
\description{
This function joins multiple RIO tables based on the relations defined in the package.
It automatically detects relations between tables and chooses the optimal join path.
When 'onderwijslocaties' is included, the result can be converted to an sf object.

This function joins multiple RIO tables based on the relations defined in the package.
It automatically detects relations between tables and chooses the optimal join path.
When 'onderwijslocaties' is included, the result can be converted to an sf object.
}
\examples{
\dontrun{
# Join tables by name (default method)
joined_data <- rio_join("vestigingserkenningen", "onderwijslocaties")

# Return as sf object for mapping
geo_data <- rio_join("vestigingserkenningen", "onderwijslocaties", as_sf = TRUE)

# Join with a specific reference date
joined_data <- rio_join("vestigingserkenningen", "onderwijslocaties",
                        reference_date = as.Date("2023-01-01"))

# Return a nested tibble
nested_data <- rio_join("vestigingserkenningen", "onderwijslocaties", nested = TRUE)
}

\dontrun{
# Join tables by name (default method)
joined_data <- rio_join("vestigingserkenningen", "onderwijslocaties")

# Return as sf object for mapping
geo_data <- rio_join("vestigingserkenningen", "onderwijslocaties", as_sf = TRUE)

# Join with a specific reference date
joined_data <- rio_join("vestigingserkenningen", "onderwijslocaties",
                        reference_date = as.Date("2023-01-01"))

# Return a nested tibble
nested_data <- rio_join("vestigingserkenningen", "onderwijslocaties", nested = TRUE)
}

}
